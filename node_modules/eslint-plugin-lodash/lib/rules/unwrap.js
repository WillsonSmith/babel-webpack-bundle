/**
 * @fileoverview Rule to ensure a lodash chain ends
 */
'use strict';

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = function (context) {
    var _require = require('../util/lodashUtil');

    var isExplicitMethodChaining = _require.isExplicitMethodChaining;
    var isChainBreaker = _require.isChainBreaker;
    var isCallToMethod = _require.isCallToMethod;
    var isChainable = _require.isChainable;
    var isEndOfChain = _require.isEndOfChain;

    var settings = require('../util/settingsUtil').getSettings(context);
    function isExplicitChainWithoutBreaker(node) {
        return isExplicitMethodChaining(node, settings.version) && !isChainBreaker(node, settings.version);
    }
    function isEvaluatedWhenLazy(node) {
        return isCallToMethod(node, settings.version, 'commit') || !isChainable(node, settings.version);
    }
    return {
        CallExpression: function CallExpression(node) {
            if (isEndOfChain(node, settings.pragma, settings.version) && (!isEvaluatedWhenLazy(node) || isExplicitChainWithoutBreaker(node))) {
                context.report(node, 'Missing unwrapping at end of chain');
            }
        }
    };
};